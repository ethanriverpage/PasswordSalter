name: CICDPipeline

on:
  push:
    branches: [ master ]

jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:  
      - uses: actions/checkout@v2
      
      - name: Python setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64

      - name: Python virtualenv install
        run: pip3 install virtualenv

      - name: Python Bandit & pylint install
        run: pip3 install bandit && pip3 install pylint

      - name:  Python setup virtualenv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Dependency install
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Virtualenv install 
        run: . venv/bin/activate
      
      - name: Security and linting test
        run: bandit -r ./app/dynamicsalter_master.py && pylint ./app/dynamicsalter_master.py
      # Step 7
      - name: Dependency zip
        run: |
          cd ./venv/lib/python3.9/site-packages
          zip -r9 ../../../../lambda.zip .
      
      # Step 8
      - name: Add application to zip file
        run: cd ./app && zip -g ../lambda.zip -r .
      
      # Step 9
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: lambda
          path: lambda.zip

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/master'
    steps:

      - name: AWS CLI install
        uses: unfor19/install-aws-cli-action@master
        with:
          version: 2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda.zip
        uses: actions/download-artifact@v2
        with:
          name: lambda

      - name: Upload to S3
        run: aws s3 cp lambda.zip s3://fsa-enterpriseassessment-ethanriverpage/lambda.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fsa-enterpriseassessment-lambda --s3-bucket fsa-enterpriseassessment-ethanriverpage --s3-key lambda.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}